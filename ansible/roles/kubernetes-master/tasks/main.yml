# ansible/roles/kubernetes-master/tasks/main.yml
---
- name: Check if cluster is already initialized
  stat:
    path: /etc/kubernetes/admin.conf
  register: k8s_init

- name: Initialize first master node
  shell: |
    kubeadm init \
      --control-plane-endpoint=192.168.1.120:6443 \
      --upload-certs \
      --pod-network-cidr=10.244.0.0/16
  when: 
    - not k8s_init.stat.exists
    - inventory_hostname == groups['kube_control_plane'][0]
  register: kubeadm_init

- name: Create .kube directory
  file:
    path: /home/ubuntu/.kube
    state: directory
    owner: ubuntu
    group: ubuntu

- name: Copy admin.conf to user's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/ubuntu/.kube/config
    remote_src: yes
    owner: ubuntu
    group: ubuntu
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: Install Flannel CNI
  shell: kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
  become_user: ubuntu
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: Get join command for control plane
  shell: kubeadm token create --print-join-command --certificate-key $(kubeadm init phase upload-certs --upload-certs | sed -n '/^\[upload-certs\] Using certificate key:/ {n; p;}')
  register: join_command_control_plane
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: Get join command for workers
  shell: kubeadm token create --print-join-command
  register: join_command_workers
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: Set join commands as facts
  set_fact:
    join_command_control_plane: "{{ hostvars[groups['kube_control_plane'][0]]['join_command_control_plane']['stdout'] }}"
    join_command_workers: "{{ hostvars[groups['kube_control_plane'][0]]['join_command_workers']['stdout'] }}"
  when: inventory_hostname != groups['kube_control_plane'][0]

- name: Join additional master nodes
  shell: "{{ join_command_control_plane }} --control-plane"
  when: 
    - not k8s_init.stat.exists
    - inventory_hostname != groups['kube_control_plane'][0]
